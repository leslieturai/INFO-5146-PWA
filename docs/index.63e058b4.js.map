{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,yGCA5F,MAAM,EAAY,SAAS,cAAc,CAAC,aACpC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAW,SAAS,cAAc,CAAC,YASzC,eAAe,IACX,IAAI,EAAQ,MAAM,GAClB,CAAA,EAAS,SAAS,CAAG,GAErB,EAAM,OAAO,CAAC,CAAC,EAAM,KACnB,GAAG,CAAC,EAAK,IAAI,GAAG,SAAS,CAAC,CACxB,IAAM,EAAW,SAAS,aAAa,CAAC,KACxC,CAAA,EAAS,EAAE,CAAG,EAAK,EAAE,CACrB,EAAS,WAAW,CAAG,EAAK,IAAI,GAAG,IAAI,CACvC,EAAS,WAAW,CAAC,EACvB,CACF,EACF,CAEF,eAAe,IACX,IAAI,EAAO,MAAM,QAAQ,WAAW,GAAI,UACxC,IAAI,EAAW,EAAE,CAInB,OAHE,EAAK,OAAO,CAAC,AAAC,IACZ,EAAS,IAAI,CAAC,EAClB,GACO,CACT,CAkBA,eAAe,EAAmB,CAAQ,EACtC,MAAM,OAAO,WAAW,GAAI,SAAU,CACpC,KAAM,EACN,UAAW,CAAA,CACb,EACF,CApBF,EAAW,gBAAgB,CAAC,QAAS,UAEjC,GADa,EAAU,KAAK,CAAC,IAAI,GACvB,CACN,IAAM,EAAY,SAAS,cAAc,CAAC,aACpC,EAAW,AAnCzB,SAAuB,CAAK,EACxB,IAAM,EAAM,SAAS,aAAa,CAAC,OAEnC,OADA,EAAI,WAAW,CAAG,EACX,EAAI,SAAS,AACtB,EA+BqC,EAAU,KAAK,CAAC,IAAI,IAE/C,IACA,MAAM,EAAmB,GACzB,IACA,EAAU,KAAK,CAAG,IAEtB,GACJ,CACJ,GAUA,EAAS,gBAAgB,CAAC,QAAS,AAAC,IACP,OAArB,EAAE,MAAM,CAAC,OAAO,EAChB,EAAE,MAAM,CAAC,MAAM,EAEvB,G,I,E,C,EC9DA,EAAiB,IAAA,IAAoB,8CAAA,YAAA,GAAA,EAA+C,QAAQ,GDgE5F,MAAM,EAAN,IAAA,IAAA,EACI,CAAA,kBAAmB,WAEnB,AADU,UAAU,aAAa,CAC/B,QAAQ,CAAC,EAAG,IAAI,CAAE,CAChB,MAAO,iBACX,GACK,IAAI,CAAC,AAAA,GAAK,QAAQ,GAAG,CAAC,uCAAwC,EAAG,IAAI,CAAE,OAAA,mBACvE,KAAK,CAAC,AAAA,GAAO,QAAQ,KAAK,CAAC,wBAAyB,IA2BjD,AArBI,CAAA,MAAO,IACJ,MAAM,MAAM,CAAC,EAChC,CAAA,EASuB,CACnB,OAAQ,0CACR,WAAY,4BACZ,UAAW,YACX,cAAe,gCACf,kBAAmB,eACnB,MAAO,2CACX","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8281a9a01481da11.js","app.js","node_modules/@parcel/runtime-js/lib/runtime-55407ccca66fb0b9.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $f5723e21c74c8311$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"7Gx3W\\\",\\\"index.63e058b4.js\\\",\\\"LVq70\\\",\\\"service-worker.dbb5f895.js\\\"]\"));\n\nconst $6b17f08f738443dc$var$taskInput = document.getElementById('taskInput');\nconst $6b17f08f738443dc$var$addTaskBtn = document.getElementById('addTaskBtn');\nconst $6b17f08f738443dc$var$taskList = document.getElementById('taskList');\nfunction $6b17f08f738443dc$var$sanitizeInput(input) {\n    const div = document.createElement(\"div\");\n    div.textContent = input;\n    return div.innerHTML;\n}\n// Get and render tasks from Firestore\nasync function $6b17f08f738443dc$var$renderTasks() {\n    var tasks = await $6b17f08f738443dc$var$getTasksFromFirestore();\n    $6b17f08f738443dc$var$taskList.innerHTML = \"\";\n    tasks.forEach((task, index)=>{\n        if (!task.data().completed) {\n            const taskItem = document.createElement(\"li\");\n            taskItem.id = task.id;\n            taskItem.textContent = task.data().text;\n            $6b17f08f738443dc$var$taskList.appendChild(taskItem);\n        }\n    });\n}\nasync function $6b17f08f738443dc$var$getTasksFromFirestore() {\n    var data = await getDocs(collection(db, \"todos\"));\n    let userData = [];\n    data.forEach((doc)=>{\n        userData.push(doc);\n    });\n    return userData;\n}\n// Add Task\n$6b17f08f738443dc$var$addTaskBtn.addEventListener('click', async ()=>{\n    const task = $6b17f08f738443dc$var$taskInput.value.trim();\n    if (task) {\n        const taskInput = document.getElementById(\"taskInput\");\n        const taskText = $6b17f08f738443dc$var$sanitizeInput(taskInput.value.trim());\n        if (taskText) {\n            await $6b17f08f738443dc$var$addTaskToFirestore(taskText);\n            $6b17f08f738443dc$var$renderTasks();\n            taskInput.value = \"\";\n        }\n        $6b17f08f738443dc$var$renderTasks();\n    }\n});\nasync function $6b17f08f738443dc$var$addTaskToFirestore(taskText) {\n    await addDoc(collection(db, \"todos\"), {\n        text: taskText,\n        completed: false\n    });\n}\n// Remove Task on Click\n$6b17f08f738443dc$var$taskList.addEventListener('click', (e)=>{\n    if (e.target.tagName === 'LI') e.target.remove();\n});\nvar $9b58f915dd881523$exports = {};\n$9b58f915dd881523$exports = new URL(\"service-worker.dbb5f895.js\", import.meta.url).toString();\n\n\nconst $6b17f08f738443dc$var$sw = new URL($9b58f915dd881523$exports);\nif ('serviceWorker' in navigator) {\n    const s = navigator.serviceWorker;\n    s.register($6b17f08f738443dc$var$sw.href, {\n        scope: '/INFO-5146-PWA/'\n    }).then((_)=>console.log('Service Worker Registered for scope:', $6b17f08f738443dc$var$sw.href, 'with', \"file:///app.js\")).catch((err)=>console.error('Service Worker Error:', err));\n}\n// Import the functions you need from the SDKs you need\nconst $6b17f08f738443dc$var$initSrc = \"https://www.gstatic.com/firebasejs/11.2.0/firebase-app.js\";\nconst $6b17f08f738443dc$var$initApp = async (src)=>{\n    const module = await import(src);\n};\n//import { doc, getDocs, addDoc, updateDoc, getFirestore, collection } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\nconst $6b17f08f738443dc$var$firebaseConfig = {\n    apiKey: \"AIzaSyCRPKcj7KdzjHALuVWDwLB2-znUtPmSpVs\",\n    authDomain: \"pwa-7d72b.firebaseapp.com\",\n    projectId: \"pwa-7d72b\",\n    storageBucket: \"pwa-7d72b.firebasestorage.app\",\n    messagingSenderId: \"465059750153\",\n    appId: \"1:465059750153:web:42c9e1528caa2528e533d8\"\n};\n// Initialize Firebase\nconst $6b17f08f738443dc$var$app = $6b17f08f738443dc$var$initApp($6b17f08f738443dc$var$firebaseConfig);\n\n\n//# sourceMappingURL=index.63e058b4.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"7Gx3W\\\",\\\"index.63e058b4.js\\\",\\\"LVq70\\\",\\\"service-worker.dbb5f895.js\\\"]\"));","const taskInput = document.getElementById('taskInput');\r\nconst addTaskBtn = document.getElementById('addTaskBtn');\r\nconst taskList = document.getElementById('taskList');\r\n\r\nfunction sanitizeInput(input) {\r\n    const div = document.createElement(\"div\");\r\n    div.textContent = input;\r\n    return div.innerHTML;\r\n  }\r\n\r\n// Get and render tasks from Firestore\r\nasync function renderTasks() {\r\n    var tasks = await getTasksFromFirestore();\r\n    taskList.innerHTML = \"\";\r\n  \r\n    tasks.forEach((task, index) => {\r\n      if(!task.data().completed){\r\n        const taskItem = document.createElement(\"li\");\r\n        taskItem.id = task.id;\r\n        taskItem.textContent = task.data().text;\r\n        taskList.appendChild(taskItem);\r\n      }\r\n    });\r\n  }\r\n\r\nasync function getTasksFromFirestore() {\r\n    var data = await getDocs(collection(db, \"todos\"));\r\n    let userData = [];\r\n    data.forEach((doc) => {\r\n      userData.push(doc);\r\n  });\r\n  return userData;\r\n}\r\n\r\n// Add Task\r\naddTaskBtn.addEventListener('click', async () => {\r\n    const task = taskInput.value.trim();\r\n    if (task) {\r\n        const taskInput = document.getElementById(\"taskInput\");\r\n        const taskText = sanitizeInput(taskInput.value.trim());\r\n\r\n        if (taskText) {\r\n            await addTaskToFirestore(taskText);\r\n            renderTasks();\r\n            taskInput.value = \"\";\r\n        }\r\n        renderTasks();\r\n    }\r\n});\r\n\r\nasync function addTaskToFirestore(taskText) {\r\n    await addDoc(collection(db, \"todos\"), {\r\n      text: taskText, \r\n      completed: false\r\n    });  \r\n  }\r\n\r\n// Remove Task on Click\r\ntaskList.addEventListener('click', (e) => {\r\n    if (e.target.tagName === 'LI') {\r\n        e.target.remove();\r\n    }\r\n});\r\n\r\nconst sw = new URL('service-worker.js', import.meta.url)\r\nif ('serviceWorker' in navigator) {\r\n    const s = navigator.serviceWorker;\r\n    s.register(sw.href, {\r\n        scope: '/INFO-5146-PWA/'\r\n    })\r\n        .then(_ => console.log('Service Worker Registered for scope:', sw.href, 'with', import.meta.url))\r\n        .catch(err => console.error('Service Worker Error:', err));\r\n}\r\n\r\n\r\n// Import the functions you need from the SDKs you need\r\nconst initSrc = \"https://www.gstatic.com/firebasejs/11.2.0/firebase-app.js\"\r\nconst initApp = async (src) => {\r\n    const module = await import(src)\r\n}\r\n\r\n\r\n\r\n//import { doc, getDocs, addDoc, updateDoc, getFirestore, collection } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCRPKcj7KdzjHALuVWDwLB2-znUtPmSpVs\",\r\n    authDomain: \"pwa-7d72b.firebaseapp.com\",\r\n    projectId: \"pwa-7d72b\",\r\n    storageBucket: \"pwa-7d72b.firebasestorage.app\",\r\n    messagingSenderId: \"465059750153\",\r\n    appId: \"1:465059750153:web:42c9e1528caa2528e533d8\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initApp(firebaseConfig);","module.exports = new __parcel__URL__(\"service-worker.dbb5f895.js\").toString();"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$6b17f08f738443dc$var$taskInput","document","getElementById","$6b17f08f738443dc$var$addTaskBtn","$6b17f08f738443dc$var$taskList","$6b17f08f738443dc$var$renderTasks","tasks","$6b17f08f738443dc$var$getTasksFromFirestore","innerHTML","forEach","task","index","data","completed","taskItem","createElement","textContent","text","appendChild","getDocs","collection","db","userData","doc","push","$6b17f08f738443dc$var$addTaskToFirestore","taskText","addDoc","addEventListener","value","trim","taskInput","$6b17f08f738443dc$var$sanitizeInput","input","div","e","target","tagName","remove","$9b58f915dd881523$exports","$6b17f08f738443dc$var$sw","navigator","s","serviceWorker","href","scope","then","_","console","log","catch","error","$6b17f08f738443dc$var$initApp","src","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"version":3,"file":"index.63e058b4.js.map"}